- name: check frpc exists
  ansible.builtin.stat:
    path: "/root/apps/frpc/{{FRP_VERSION}}.version"
  register: basedir_stat
- name: init frpc workspace
  shell: rm -rf /root/apps/frpc
  when: not (basedir_stat.stat.exists)
- name: download frpc bin
  shell: |
    mkdir /root/apps/frpc -p
    wget -P /root/apps/frpc https://ghproxy.com/https://github.com/fatedier/frp/releases/download/v{{FRP_VERSION}}/frp_{{FRP_VERSION}}_linux_amd64.tar.gz -O /root/apps/frpc/frpc.tar.gz
  when: not (basedir_stat.stat.exists)
- name: extract frp tar
  shell: tar -xf /root/apps/frpc/frpc.tar.gz --strip-components 1 -C /root/apps/frpc/
  when: not (basedir_stat.stat.exists)
- name: clean cache
  shell: |
    rm -rf /root/apps/frpc/frpc.tar.gz 
    rm -rf /root/apps/frpc/frps
    rm -rf /root/apps/frpc/frps.ini
    rm -rf /root/apps/frpc/frpc_full.ini 
    rm -rf /root/apps/frpc/frps_full.ini
    rm -rf /root/apps/frpc/frpc.ini
- name: set proxmox configration
  copy:
    src: proxmox
    dest: /root/apps/frpc/
- name: set proxmox frpc service
  copy:
    src: proxmox.service
    dest: /etc/systemd/system/proxmox.service???????
- name: enable and start proxmox frpc service
  shell: |
    systemctl enable proxmox.service
    systemctl stop proxmox.service
    systemctl daemon-reload
    systemctl start proxmox.service
- name: set frpc version
  shell: touch /root/apps/frpc/{{FRP_VERSION}}.version
  when: not (basedir_stat.stat.exists)